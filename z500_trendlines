#!/usr/bin/env python3

import numpy as np
import pandas as pd
from scipy import stats

'''
This code calculates z500 trendlines for each latitude during April-Sep, 1940-2023
The output array "z500_trendlines" consistes of 161 latitudes (5-45N at 0.25 resolution) and 84 time steps, one for each year.
'''
  
z500_global = np.load('z500_global_all.npy')

dates = pd.date_range(start='1/1/1940', end='12/31/2023')
dates = pd.DataFrame(dates)
dates['month'] = pd.to_datetime(dates.iloc[:,0]).dt.month
dates = dates[dates.month.isin([4,5,6,7,8,9])]
idx = dates.index.values

arr2 = z500_global[idx,:]

z500_trendlines = np.empty([161,84])
for k in range(161):
    this_lat = arr2[:,k,:]
    splits = np.split(this_lat,84,axis=0)
    avgs = [np.mean(splits[j]) for j in range(84)]
    slope = stats.linregress(np.arange(84),avgs)[0]
    intercept = -slope # setting to -slope (zero first year) since I just want the slope step each year
    vals1 = []
    for i in range(84):
        intercept += slope
        vals1.append(intercept)
    z500_trendlines[k,:] = vals1

np.save('z500_trendlines',z500_trendlines)
