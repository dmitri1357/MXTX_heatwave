#!/usr/bin/env python3

import numpy as np
import pandas as pd
from collections import Counter
from scipy import stats

tmax_z_normed = np.load('tmax_z_normed2.npy')
vals = tmax_z_normed
sigma = np.where(vals>=2,1,0) # the "vals>=2" specifies that I'm only looking for values greater/equal than 2 s.d.

# calculate longest streak in each year that had domain-averaged tmax >2 s.d.

start_year = 1940
end_year = 2023

length_of_record = int((end_year+1)-start_year)
streaks = np.empty(length_of_record)
years = np.arange(start_year,end_year+1,1)
data_years = np.split(sigma,length_of_record)
for k in range(length_of_record):
    year = years[k]
    dates = pd.date_range(start=f'4/1/{year}', end=f'9/30/{year}')
    occ = pd.Series(data_years[k])
    only = occ[occ == 1]
    occurs = dates[only.index]
    occurs = pd.DataFrame(occurs).rename(columns={0:'date'})
    dt = occurs['date']
    day = pd.Timedelta('1d')
    breaks = dt.diff() != day
    groups = breaks.cumsum()
    groups1 = Counter(groups)
    if len(groups1) > 0:
        val = np.max(list(groups1.values()))
        streaks[k] = val
    else:
        streaks[k] = 0

# get linear trend over 84 year period
x = np.arange(84)
y = streaks
intercept = stats.linregress(x,y)[1]
slope = stats.linregress(x,y)[0]
vals1 = []
for j in range(84):
    intercept += slope
    vals1.append(intercept)
slope * 84 # +3.9 days

# permutation test (n=10,000 iterations) to obtain significance of trend
x = np.arange(84)
slopes1 = np.empty(10000)
for k in range(10000):
    run = np.random.permutation(streaks)
    slopes1[k] = stats.linregress(x,run)[0]
slope_perm = stats.percentileofscore(slopes1, slope)

poly = np.polyfit(x,y,deg=3)

fig = plt.figure(figsize=(8,6))
plt.plot(streaks,'-o', color='orangered')
#plt.plot(vals1,'--', color='tab:brown')
#plt.plot(np.polyval(poly, x),'--', color='firebrick')
#plt.grid(linewidth=0.5)
plt.xticks(np.arange(0,81,10), ('1940','1950','1960','1970','1980',
                                '1990','2000','2010','2020'), fontsize = 13)
plt.yticks(np.arange(0,16.1,2), fontsize=13)
#plt.ylabel('Number of consecutive days', fontsize = 15)
#plt.title('Longest streaks of domain-averaged >2 s.d. Tmax', fontsize = 20)
plt.savefig('fig_1b.pdf',dpi=600)
