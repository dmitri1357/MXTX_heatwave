#!/usr/bin/env python3

import numpy as np
import pandas as pd
from tqdm import tqdm
import matplotlib.pyplot as plt   
from mpl_toolkits.basemap import Basemap

# set font to Arial
import matplotlib as mpl
mpl.rc('font',family='Arial')

# datasets can be found in accompanying Zenodo repository
actual_areas = np.load('actual_areas.npy')
tmax_amjjas2_z = np.load('tmax_amjjas2_z.npy')
      
tvec = np.reshape(tmax_amjjas2_z,(15372,11392))

# calculate fraction of domain with 1.5, 2, 2.5, 3, 3.5, and 4 sigma Tmax anomalies

def extent_sigma(sigma,tmax_array):
    extent = np.empty(15372)
    for k in range(15372):
        day = tmax_array[k,:]
        x1 = np.where(day>=sigma)[0]
        x2 = actual_areas[x1]
        extent[k] = np.sum(x2)/2618551 # 2,618,551 is the area of study domain in sq km
        
    return extent

extent15sigma = extent_sigma(sigma=1.5,tmax_array=tvec)
extent2sigma = extent_sigma(sigma=2,tmax_array=tvec)
extent25sigma = extent_sigma(sigma=2.5,tmax_array=tvec)
extent3sigma = extent_sigma(sigma=3,tmax_array=tvec)
extent35sigma = extent_sigma(sigma=3.5,tmax_array=tvec)
extent4sigma = extent_sigma(sigma=4,tmax_array=tvec)

dates = pd.date_range(start='1/1/1940', end='12/31/2023')
dates = dates[~((dates.month == 2) & (dates.day == 29))] # index takes into account that I removed leap days
dates = pd.DataFrame(dates)
dates['month'] = pd.to_datetime(dates.iloc[:,0]).dt.month
dates = dates[dates.month.isin([4,5,6,7,8,9])]
dates.drop(columns='month',inplace=True)
dates.rename(columns={0:'date'}, inplace=True)
dates = dates.reset_index()

dates['>1.5 sd'] = extent15sigma
dates['>2 sd'] = extent2sigma
dates['>2.5 sd'] = extent25sigma
dates['>3 sd'] = extent3sigma
dates['>3.5 sd'] = extent35sigma
dates['>4 sd'] = extent4sigma

# map location of grid cells with >2sd Tmax
var = tmax_amjjas2_z[15269,:,:] # day 15269 corresponds to 6/20/2023 (out of 15372 days in April-September 1940-2023)
var = np.where(var>=2,1,np.nan)

lat = np.arange(14.75,36.76,0.25)
lon = np.arange(-118.5,-86.74,0.25)
lon, lat = np.meshgrid(lon, lat)

plt.figure(figsize=(10, 8))
m = Basemap(projection='lcc', area_thresh=10000, resolution='l',
            width=3.3E6, height=3.3E6,
            lat_0=25, lon_0=-102)
m.fillcontinents(color='white',lake_color='white',alpha=1,zorder=0)
m.drawstates(linewidth=0.5,linestyle='solid',color='k')
m.drawcountries(linewidth=0.5,linestyle='solid',color='k')
m.drawcoastlines(color='black')
m.pcolormesh(lon, lat, var, latlon=True, cmap=plt.cm.get_cmap('Reds'))
plt.title('Grid cells >2 sd Tmax on June 20, 2023', size=20)
plt.clim(0,1)      
m.readshapefile('texas_mexico',name='null',color='b',linewidth=2)

# create Fig 6b
var = tmax_amjjas2_z[14387,:] # day 14387 corresponds to 7/23/2018 (out of 15372 days in April-September 1940-2023)
var = np.where(var>=2,1,np.nan)

lat = np.arange(14.75,36.76,0.25)
lon = np.arange(-118.5,-86.74,0.25)
lon, lat = np.meshgrid(lon, lat)

plt.figure(figsize=(10, 8))
m = Basemap(projection='lcc', area_thresh=10000, resolution='l',
            width=3.3E6, height=3.3E6,
            lat_0=25, lon_0=-102)
m.fillcontinents(color='white',lake_color='white',alpha=1,zorder=0)
m.drawstates(linewidth=0.5,linestyle='solid',color='k')
m.drawcountries(linewidth=0.5,linestyle='solid',color='k')
m.drawcoastlines(color='black')
m.pcolormesh(lon, lat, var, latlon=True, cmap=plt.cm.get_cmap('Reds'))
plt.title('Grid cells >2 sd Tmax on July 23, 2018', size=20)
plt.clim(0,1)      
m.readshapefile('texas_mexico',name='null',color='b',linewidth=2)
